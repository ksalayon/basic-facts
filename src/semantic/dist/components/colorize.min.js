!function(v,e,n,C){"use strict";e=void 0!==e&&e.Math==Math?e:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")(),v.fn.colorize=function(e){var b=v.isPlainObject(e)?v.extend(!0,{},v.fn.colorize.settings,e):v.extend({},v.fn.colorize.settings),y=arguments||!1;return v(this).each(function(e){var n,i,t,a,o,r,c,s,d=v(this),g=v("<canvas />")[0],l=v("<canvas />")[0],u=v("<canvas />")[0],f=new Image,m=b.colors,h=(b.paths,b.namespace),p=b.error,w=d.data("module-"+h);if(s={checkPreconditions:function(){return s.debug("Checking pre-conditions"),!(!v.isPlainObject(m)||v.isEmptyObject(m))||(s.error(p.undefinedColors),!1)},async:function(e){b.async?setTimeout(e,0):e()},getMetadata:function(){s.debug("Grabbing metadata"),a=d.data("image")||b.image||C,o=d.data("name")||b.name||e,r=b.width||d.width(),c=b.height||d.height(),0!==r&&0!==c||s.error(p.undefinedSize)},initialize:function(){s.debug("Initializing with colors",m),s.checkPreconditions()&&s.async(function(){s.getMetadata(),s.canvas.create(),s.draw.image(function(){s.draw.colors(),s.canvas.merge()}),d.data("module-"+h,s)})},redraw:function(){s.debug("Redrawing image"),s.async(function(){s.canvas.clear(),s.draw.colors(),s.canvas.merge()})},change:{color:function(e,n){if(s.debug("Changing color",e),m[e]===C)return s.error(p.missingColor),!1;m[e]=n,s.redraw()}},canvas:{create:function(){s.debug("Creating canvases"),g.width=r,g.height=c,l.width=r,l.height=c,u.width=r,u.height=c,n=g.getContext("2d"),i=l.getContext("2d"),t=u.getContext("2d"),d.append(g),n=d.children("canvas")[0].getContext("2d")},clear:function(e){s.debug("Clearing canvas"),t.fillStyle="#FFFFFF",t.fillRect(0,0,r,c)},merge:function(){v.isFunction(n.blendOnto)?(n.putImageData(i.getImageData(0,0,r,c),0,0),t.blendOnto(n,"multiply")):s.error(p.missingPlugin)}},draw:{image:function(e){s.debug("Drawing image"),e=e||function(){},a?(f.src=a,f.onload=function(){i.drawImage(f,0,0),e()}):(s.error(p.noImage),e())},colors:function(){s.debug("Drawing color overlays",m),v.each(m,function(e,n){b.onDraw(t,o,e,n)})}},debug:function(e,n){b.debug&&(n!==C?console.info(b.name+": "+e,n):console.info(b.name+": "+e))},error:function(e){console.warn(b.name+": "+e)},invoke:function(e,n,i){var t;return i=i||Array.prototype.slice.call(arguments,2),"string"==typeof e&&w!==C&&(e=e.split("."),v.each(e,function(e,n){return v.isPlainObject(w[n])?(w=w[n],!0):v.isFunction(w[n])?(t=w[n],!0):(s.error(b.error.method),!1)})),!!v.isFunction(t)&&t.apply(n,i)}},w!==C&&y)return"invoke"==y[0]&&(y=Array.prototype.slice.call(y,1)),s.invoke(y[0],this,Array.prototype.slice.call(y,1));s.initialize()}),this},v.fn.colorize.settings={name:"Image Colorizer",debug:!0,namespace:"colorize",onDraw:function(e,n,i,t){},async:!0,colors:{},metadata:{image:"image",name:"name"},error:{noImage:"No tracing image specified",undefinedColors:"No default colors specified.",missingColor:"Attempted to change color that does not exist",missingPlugin:"Blend onto plug-in must be included",undefinedHeight:"The width or height of image canvas could not be automatically determined. Please specify a height."}}}(jQuery,window,document);